# cloudbuild-iac.yaml

steps:
  - id: 'guard-region'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - -lc
      - |
        set -euo pipefail
        region="${_REGION}"
        if [[ -z "${region}" || "${region}" == "unset" ]]; then
          echo "ERROR: _REGION must be set in the Cloud Build trigger (e.g., asia-northeast1)." 1>&2
          exit 1
        fi

  - id: 'write-backend-config'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - -lc
      - |
        set -euo pipefail
        bucket="${_TF_BACKEND_BUCKET:-${TF_BACKEND_BUCKET:-}}"
        prefix="${_TF_BACKEND_PREFIX:-${TF_BACKEND_PREFIX:-terraform/state}}"
        impersonate_sa="${_TF_BACKEND_IMPERSONATE_SA:-${TF_BACKEND_IMPERSONATE_SA:-}}"

        if [[ -z "${bucket}" ]]; then
          echo "ERROR: Provide _TF_BACKEND_BUCKET (or legacy TF_BACKEND_BUCKET) in the trigger substitutions." 1>&2
          exit 1
        fi

        {
          printf 'bucket = "%s"\n' "${bucket}"
          printf 'prefix = "%s"\n' "${prefix}"
          if [[ -n "${impersonate_sa}" ]]; then
            printf 'impersonate_service_account = "%s"\n' "${impersonate_sa}"
          fi
        } > infra/backend.hcl

  - id: 'tf-init'
    name: 'hashicorp/terraform:1.8'
    entrypoint: 'terraform'
    args: ['-chdir=infra', 'init', '-backend-config=backend.hcl']

  - id: 'tf-plan'
    name: 'hashicorp/terraform:1.8'
    entrypoint: 'terraform'
    args:
      - '-chdir=infra'
      - 'plan'
      - '-input=false'
      - '-out=tfplan'
      - "-var=project=${PROJECT_ID}"
      - "-var=region=${_REGION}"

  - id: 'tf-apply'
    name: 'hashicorp/terraform:1.8'
    entrypoint: 'terraform'
    args:
      - '-chdir=infra'
      - 'apply'
      - '-auto-approve'
      - 'tfplan'

options:
  logging: CLOUD_LOGGING_ONLY

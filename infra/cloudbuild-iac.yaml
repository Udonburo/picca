options:
  logging: CLOUD_LOGGING_ONLY

steps:
  - id: 'guard-region'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - -lc
      - |
        set -euo pipefail
        region="${_REGION:-}"
        if [[ -z "${region}" || "${region}" == "unset" ]]; then
          echo "ERROR: _REGION must be set in the Cloud Build trigger (e.g., asia-northeast1)." 1>&2
          exit 1
        fi

  - id: 'gen-backend-hcl'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - -lc
      - |
        set -euo pipefail
        BUCKET="${_TF_BACKEND_BUCKET:-${TF_BACKEND_BUCKET:-}}"
        if [[ -z "$$BUCKET" ]]; then
          echo "ERROR: Provide _TF_BACKEND_BUCKET (or TF_BACKEND_BUCKET)." 1>&2
          exit 1
        fi
        PREFIX="${_TFSTATE_PREFIX:-${TFSTATE_PREFIX:-infra/state}}"
        IMPERSONATE="${_TF_BACKEND_IMPERSONATE_SA:-${TF_BACKEND_IMPERSONATE_SA:-}}"
        {
          printf 'bucket = "%s"\n' "$$BUCKET"
          printf 'prefix = "%s"\n' "$$PREFIX"
          if [[ -n "$$IMPERSONATE" ]]; then
            printf 'impersonate_service_account = "%s"\n' "$$IMPERSONATE"
          fi
        } > infra/backend.hcl
        echo "[ok] wrote infra/backend.hcl -> bucket=$$BUCKET, prefix=$$PREFIX"

  - id: 'tf-init'
    name: 'hashicorp/terraform:1.8'
    entrypoint: 'bash'
    args:
      - -lc
      - |
        set -euo pipefail
        action="${_TF_ACTION:-plan}"
        [[ "${action}" =~ ^(plan|apply)$ ]] || { echo "[skip] tf-init"; exit 0; }
        terraform -chdir=infra init -backend-config=backend.hcl

  - id: 'tf-plan'
    name: 'hashicorp/terraform:1.8'
    entrypoint: 'bash'
    args:
      - -lc
      - |
        set -euo pipefail
        action="${_TF_ACTION:-plan}"
        [[ "${action}" =~ ^(plan|apply)$ ]] || { echo "[skip] tf-plan"; exit 0; }
        terraform -chdir=infra plan -no-color -input=false -out=plan.tfout \
          -var="project=${PROJECT_ID}" -var="region=${_REGION}"

  - id: 'tf-apply'
    name: 'hashicorp/terraform:1.8'
    entrypoint: 'bash'
    args:
      - -lc
      - |
        set -euo pipefail
        action="${_TF_ACTION:-plan}"
        [[ "${action}" == "apply" ]] || { echo "[skip] tf-apply"; exit 0; }
        terraform -chdir=infra apply -auto-approve plan.tfout

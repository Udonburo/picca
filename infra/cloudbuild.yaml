# infra/cloudbuild.yaml

availableSecrets:
  secretManager:
    - versionName: "projects/$PROJECT_ID/secrets/DB_PASSWORD/versions/latest"
      env: "DB_PASSWORD"

substitutions:
  _TF_ACTION: 'plan'
  _REGION: 'asia-northeast1'
  _SERVICE: 'picca-stg'

images:
  - "gcr.io/$PROJECT_ID/$_SERVICE:$SHORT_SHA"

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: UNSPECIFIED

steps:
  # 1. ユニットテスト（DB_PASSWORD だけ注入）
  - id: run-unit-tests
    name: node:20
    entrypoint: bash
    secretEnv:
      - DB_PASSWORD
    args:
      - -c
      - |
        echo "Running tests with DB_PASSWORD=$$DB_PASSWORD"
        npm ci && npm test -- --ci

  # 2. Docker イメージをビルド＆プッシュ
  - id: build-and-push-image
    name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - -c
      - |
        docker build -t gcr.io/$PROJECT_ID/$_SERVICE:$SHORT_SHA .
        docker push gcr.io/$PROJECT_ID/$_SERVICE:$SHORT_SHA

  # 3. Cloud Run へデプロイ（DB_PASSWORD & API_KEY はデプロイ時に --set-secrets で注入）
  - id: deploy-to-cloud-run
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run deploy $_SERVICE \
          --image gcr.io/$PROJECT_ID/$_SERVICE:$SHORT_SHA \
          --region $_REGION \
          --platform managed \
          --set-secrets=DB_PASSWORD=DB_PASSWORD:latest,API_KEY=API_KEY:latest \
          --allow-unauthenticated \
          --quiet

  # 4. Terraform 初期化
  - id: tf-init
    name: hashicorp/terraform:1.8
    entrypoint: terraform
    args: ['init', '-input=false']
    dir: infra

  # 5. Terraform Plan
  - id: tf-plan
    name: hashicorp/terraform:1.8
    entrypoint: terraform
    args: ['plan', '-no-color', '-input=false', '-out=plan.tfout']
    dir: infra

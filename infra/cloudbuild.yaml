# infra/cloudbuild.yaml

substitutions:
  _TF_ACTION: 'plan'           # 将来 apply に切り替えたい時用
  _REGION: 'asia-northeast1'   # デプロイ先リージョン
  _SERVICE: 'picca-stg'        # ステージングサービス名

images:
  - "gcr.io/$PROJECT_ID/$_SERVICE:$SHORT_SHA"

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: UNSPECIFIED

steps:
  # 1. ユニットテストを実行
  - id: 'run-unit-tests'
    name: 'node:20'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm ci && npm test -- --ci

  # 2. Docker イメージをビルド＆プッシュ
  - id: 'build-image'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - build
      - '-t'
      - "gcr.io/$PROJECT_ID/$_SERVICE:$SHORT_SHA"
      - "."

  # 3. Cloud Run へ自動デプロイ
  - id: 'deploy-to-cloud-run'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy $_SERVICE \
          --image gcr.io/$PROJECT_ID/$_SERVICE:$SHORT_SHA \
          --region $_REGION \
          --platform managed \
          --quiet

  # 4. Terraform 初期化
  - id: 'tf-init'
    name: 'hashicorp/terraform:1.8'
    entrypoint: 'terraform'
    args:
      - 'init'
      - '-input=false'
    dir: 'infra'

  # 5. Terraform Plan（apply は将来ここを _TF_ACTION で切替）
  - id: 'tf-plan'
    name: 'hashicorp/terraform:1.8'
    entrypoint: 'terraform'
    args:
      - 'plan'
      - '-no-color'
      - '-input=false'
      - '-out=plan.tfout'
    dir: 'infra'

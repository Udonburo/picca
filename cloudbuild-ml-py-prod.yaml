steps:
  # Build: ルートをコンテキストに、Dockerfile は明示指定
  - name: gcr.io/cloud-builders/docker
    id: build-ml-py
    args: ['build','-f','services/ml_py/Dockerfile',
           '-t','${_REGION}-docker.pkg.dev/${PROJECT_ID}/picca-backend/picca-ml-py-prod:latest','.']

  - name: gcr.io/cloud-builders/docker
    id: push-ml-py
    args: ['push','${_REGION}-docker.pkg.dev/${PROJECT_ID}/picca-backend/picca-ml-py-prod:latest']

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: deploy-ml-py
    entrypoint: gcloud
    args:
      - run
      - deploy
      - picca-ml-py-prod
      - --image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/picca-backend/picca-ml-py-prod:latest
      - --region=${_REGION}
      - --platform=managed
      - --quiet
  - --concurrency=4
  - --cpu=2
  - --memory=2Gi
  - --min-instances=1
  - --timeout=60
  - --set-env-vars=_MODEL_URI=gs://picca-models/models/dcv/${_TAG_NAME}/model.onnx,_MODEL_SHA256=${_MODEL_SHA256},OMP_NUM_THREADS=2,PYTHONUNBUFFERED=1
  - --service-account=ml-py-prod-sa@${PROJECT_ID}.iam.gserviceaccount.com
  - --allow-unauthenticated

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: smoke-test
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        ML_URL=$(gcloud run services describe picca-ml-py-prod --region ${_REGION} --format='value(status.url)')
        TOKEN=$(gcloud auth print-identity-token)
        for i in {1..10}; do
          if curl -sf -H "Authorization: Bearer $$TOKEN" -H "Content-Type: application/json" \
            -X POST "$$ML_URL/predict" \
            -d '{"keypoints":[{"x":0.1,"y":0.2}],"fps":30}' >/dev/null; then
            echo "smoke OK"; exit 0
          fi
          echo "waiting for revision to be ready... ($$i/10)"; sleep 3
        done
        echo "smoke-test failed"; exit 1

substitutions:
  _REGION: asia-northeast1
  _TAG_NAME: v0.1.1
  _MODEL_SHA256: ' '

options:
  logging: CLOUD_LOGGING_ONLY
timeout: "3600s"

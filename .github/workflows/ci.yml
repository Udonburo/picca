name: CI

on:
  push:
    branches: [ main, feat/**, fix/** ]
  pull_request:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Guard Cloud Build substitutions
        run: |
          set -euo pipefail
          ALLOW='PROJECT_ID|SHORT_SHA|COMMIT_SHA|BUILD_ID|REPO_NAME|BRANCH_NAME|TAG_NAME|REVISION_ID|TRIGGER_NAME'
          PATTERN='(?<!\$)\$(?!('"$ALLOW"')\b)[A-Z][A-Z0-9_]*\b|(?<!\$)\$\{(?!('"$ALLOW"')\})([A-Z][A-Z0-9_]*)\}'
          files=$(git ls-files '*cloudbuild*.yaml' 'infra/*.yaml' || true)
          if [ -n "$files" ] && (echo "$files" | xargs -r grep -nP "$PATTERN"); then
            echo 'Found raw $VAR tokens not in allow-list. Use $$VAR instead (or _SUBST in substitutions:).' >&2
            exit 1
          fi

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements-dev.txt
            services/ml_py/requirements.txt

      - name: Install base dev deps (fast + lean)
        run: |
          python -m pip install -U pip wheel setuptools
          pip install ruff pytest "httpx<0.28" onnx

      - name: Ruff
        run: ruff check .

      - name: Install ml_py deps
        run: pip install -r services/ml_py/requirements.txt

      - name: Install torch (CPU)
        run: pip install torch

      - name: Pytest (JUnit)
        run: pytest -q -ra --junitxml=pytest.xml

      - name: Upload pytest report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: pytest.xml

  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      #  公式Action + Tokenをenvで明示
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GITLEAKS_ENABLE_COMMENTS: "false"
        with:
          args: "--config=.gitleaks.toml --redact --verbose"
